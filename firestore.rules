rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- NEW RULE FOR COLLECTION GROUP ---
    // 「いいね」の一覧取得を許可する
    match /{path=**}/likes/{userId} {
      allow read: if request.auth != null;
    }

    // 【Quests】
    match /quests/{questId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // 【Users】
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // 【MyQuests】
    match /my_quests/{myQuestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    // 【Posts】
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      
      // --- MODIFIED RULE ---
      // 投稿の更新を、ログインしているユーザーなら誰でも許可する（「いいね」のため）
      allow update: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;

      // 【Likes】
      match /likes/{userId} {
        allow read: if request.auth != null;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }

      // 【Comments】
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
      }
    }
    
    // 【Friendships】
    match /friendships/{friendshipId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
                    && request.auth.uid == request.resource.data.requesterId
                    && request.resource.data.status == "pending";
      allow update: if request.auth != null
                    && request.auth.uid == resource.data.recipientId
                    && resource.data.status == "pending"
                    && (request.resource.data.status == "accepted" || request.resource.data.status == "declined");
      allow delete: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}